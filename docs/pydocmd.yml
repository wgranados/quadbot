site_name: "Quadbot Documentation"
repo_url: https://github.com/wlgranados/quadbot

# This tells pydocmd which pages to generate from which Python modules,
# functions and classes. At the first level is the page name, below that
# is a tree of Python member names (modules, classes, etc.) that should be
# documented. Higher indentation leads to smaller header size.
generate:
  - showdown.md:
    - showdown.Client
  - plugins/CommandBase.md:
      - plugins.CommandBase.CommandBase
  - plugins/LatexCommand.md:
      - plugins.Latex.LatexCommand.Latex
  - plugins/CreditsCommand.md:
      - plugins.CreditsCommand.Credits


# MkDocs pages configuration. The `<<` operator is sugar added by pydocmd
# that allows you to use an external Markdown file (eg. your project's README)
# in the documentation. The path must be relative to current working directory.
# This configuration is not mandatory if you have your own mkdocs.yml config file.
pages:
- Home: index.md << ../README.md
- Setup: setup.md << ../SETUP.md
- Development: 
  - showdown: showdown.md
  - commands: plugins/CommandBase.md
  - testing: testing.md << ../TESTING.md
- Contributing: contributing.md << ../CONTRIBUTING.md
- Commands:
  - Credits: plugins/CreditsCommand.md
  - Latex: plugins/LatexCommand.md

# These options all show off their default values. You don't have to add
# them to your configuration if you're fine with the default.
docs_dir: sources
gens_dir: _build/pydocmd 
site_dir: _build/site
theme: readthedocs
loader: pydocmd.loader.PythonLoader
preprocessor: pydocmd.preprocessor.Preprocessor


# Whether to output headers as markdown or HTML.  Used to workaround
# https://github.com/NiklasRosenstein/pydoc-markdown/issues/11.  The default is
# to generate HTML with unique and meaningful id tags, which can't be done with
# markdown.
#
# Note: if using the simple generator mode, this will default to 'markdown'
# instead of 'html'.
headers: html

additional_search_paths:
- ..